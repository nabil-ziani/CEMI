@page "/student"
@page "/student/{id:int}"
@inject IStudentService studentService

@if(Id == null)
{
    <PageTitle>Inschrijven</PageTitle>
    <h3>Schrijf een nieuwe student in</h3>
}
else
{
    <PageTitle>Bewerken</PageTitle>
    <h3>Bewerk @student.FirstName @student.LastName</h3>
}

<EditForm Model="student" OnValidSubmit="HandleSubmit">
    <DataAnnotationsValidator />
    <!-- voornaam, achternaam, geboortedatum -->
    <div class="row mt-4">
        <div class="form-group col-md-4">
            <label class="required" for="firstname">Voornaam</label>
            <InputText id="firstname" @bind-Value="student.FirstName" class="form-control required"></InputText>
        </div>
        <div class="form-group col-md-4">
            <label class="required" for="lastname">Familienaam</label>
            <InputText id="lastname" @bind-Value="student.LastName" class="form-control"></InputText>
        </div>
        <div class="form-group col-md-2">
            <label class="required" for="birthdate">Geboortedatum</label>
            <InputDate id="birthdate" @bind-Value="student.BirthDate" class="form-control"></InputDate>
        </div>
    </div>
    <!-- klas, telefoon1, telefoon2 -->
    <div class="row mt-4">
        <div class="form-group col-md-2">
            <label for="class">Klas 2022-2023</label>
            <InputSelect id="class " @bind-Value="student.ClassLevel" class="form-control">
                @foreach (var level in Enum.GetValues(typeof(ClassLevel)))
                {
                    <option value="@level">@level</option>
                }
            </InputSelect>
        </div>
        <div class="form-group col-md-4">
            <label class="required" for="phone1">Telefoon 1</label>
            <InputText id="phone1" @bind-Value="student.Phone1" class="form-control"></InputText>
        </div>
        <div class="form-group col-md-4">
            <label for="phone2">Telefoon 2</label>
            <InputText id="phone2" @bind-Value="student.Phone2" class="form-control"></InputText>
        </div>
    </div>
    <!-- email1, email2, alleen naar huis? -->
    <div class="row mt-4">
        <div class="form-group col-md-4">
            <label class="required" for="email1">E-mail 1</label>
            <InputText id="email1" @bind-Value="student.Email1" class="form-control"></InputText>
        </div>
        <div class="form-group col-md-4">
            <label for="email2">E-mail 2</label>
            <InputText id="email2" @bind-Value="student.Email2" class="form-control"></InputText>
        </div>
        <div class="form-group col-md-2 d-flex align-items-center">
            <div>
                <InputCheckbox id="homealone" @bind-Value="student.HomeAlone"></InputCheckbox>
                <label for="homealone">Alleen naar huis?</label>
            </div>
        </div>
    </div>
    <!-- Adres 1 -->
    <div class="row mt-4">
        <div class="form-group col-md-4">
            <label class="required" for="street1">Straat 1</label>
            <InputText id="street1" @bind-Value="student.Street1" class="form-control"></InputText>
        </div>
        <div class="form-group col-md-2">
            <label class="required" for="housenumber1">Huisnummer 1</label>
            <InputText id="housenumber1" @bind-Value="student.HouseNumber1" class="form-control"></InputText>
        </div>
        <div class="form-group col-md-2">
            <label class="required" for="postalcode1">Postcode 1</label>
            <InputText id="postalcode1" @bind-Value="student.PostalCode1" class="form-control"></InputText>
        </div>
        <div class="form-group col-md-2">
            <label class="required" for="district1">Gemeente 1</label>
            <InputText id="district1" @bind-Value="student.District1" class="form-control"></InputText>
        </div>
    </div>
    <!-- Adres 2 -->
    <div class="row mt-4">
        <div class="form-group col-md-4">
            <label for="street2">Straat 2</label>
            <InputText id="street2" @bind-Value="student.Street2" class="form-control"></InputText>
        </div>
        <div class="form-group col-md-2">
            <label for="housenumber2">Huisnummer 2</label>
            <InputText id="housenumber2" @bind-Value="student.HouseNumber2" class="form-control"></InputText>
        </div>
        <div class="form-group col-md-2">
            <label for="postalcode2">Postcode 2</label>
            <InputText id="postalcode2" @bind-Value="student.PostalCode2" class="form-control"></InputText>
        </div>
        <div class="form-group col-md-2">
            <label for="district2">Gemeente 2</label>
            <InputText id="district2" @bind-Value="student.District2" class="form-control"></InputText>
        </div>
    </div>

    <!-- Opmerkingen? -->
    <div class="row mt-4">
        <div class="form-group col-md-10">
            <label for="remarks">Opmerkingen</label>
            <InputTextArea id="remarks" @bind-Value="student.Remarks" class="form-control"></InputTextArea>
        </div>
    </div>
    <br />
    <button type="submit" class="btn btn-primary">@btnText</button>
    <button type="button" class="btn btn-danger" @onclick="DeleteStudent">Verwijder student</button>
    <ValidationSummary />
</EditForm>

@code {
    [Parameter]
    public int? Id { get; set; }

    string btnText = string.Empty;

    StudentModel student = new StudentModel();

    protected override async Task OnInitializedAsync()
    {
        btnText = Id == null ? "Inschrijven" : "Bewerk";
    }

    protected override async Task OnParametersSetAsync()
    {
        if (Id == null)
        {
            student.ClassLevel = ClassLevel.Tamhidi;
        }
        else
        {
            student = await studentService.GetSingleStudent((int)Id);

        }
    }

    async Task HandleSubmit()
    {
        if(Id == null)
        {
            await studentService.CreateStudent(student);
        } 
        else
        {
            await studentService.UpdateStudent(student);    
        }
    }

    async Task DeleteStudent()
    {
        await studentService.DeleteStudent(student.Id);
    }
}
